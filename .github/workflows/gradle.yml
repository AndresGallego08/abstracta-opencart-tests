name: Run Automation Tests

on:
  push:
    branches:
      - main  # Cambia esto si usas otra rama principal
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest  # Utilizamos un runner de Ubuntu en lugar de una imagen de Docker personalizada

    steps:
      # Paso 1: Check out el repositorio
      - name: Checkout repository
        uses: actions/checkout@v4

      # Paso 2: Configurar Java 11
      - name: Set up Java 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'  # OpenJDK temurin
          java-version: '11'

      # Paso 3: Configurar Gradle (podemos usar la imagen predeterminada de Gradle de GitHub Actions)
      - name: Set up Gradle
        uses: gradle/gradle-build-action@v2

      # Paso 4: Ejecutar las pruebas con Gradle
      - name: Run Gradle tests
        working-directory: automatizacion-web  # Asegúrate de que el directorio sea correcto
        run: |
          chmod +x gradlew
          ./gradlew clean test -d
          ./gradlew aggregate

      # Paso 5: (Opcional) Subir los reportes de Serenity
      - name: Upload Serenity Reports
        uses: actions/upload-artifact@v2
        with:
          name: serenity-report
          path: automatizacion-web/target/site/serenity/  # Asegúrate de que la ruta sea correcta
